{
  "version": 3,
  "sources": ["../src/index.ts", "../src/useTheme.tsx", "../src/Context.tsx", "../src/Toggle.tsx", "../src/Provider.tsx", "../src/local-storage.ts", "../src/preferred-theme.ts"],
  "sourcesContent": ["export { Toggle } from './Toggle';\nexport { useTheme } from './useTheme';\nexport { ThemeProvider } from './Provider';\n", "import { useContext } from 'react';\nimport { ThemeContext } from './Context';\n\nexport function useTheme() {\n    return useContext(ThemeContext);\n}\n", "import React from 'react';\n\nexport type Theme = 'dark' | 'light';\n\nexport type ThemeOptions = {\n    theme?: Theme;\n    save?: boolean;\n};\n\ntype ThemeContext = {\n    theme: Theme;\n    setTheme: (theme: Theme) => void;\n    options: ThemeOptions;\n};\n\nexport const ThemeContext = React.createContext<ThemeContext>({\n    theme: 'dark',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setTheme: () => {},\n    options: { theme: 'dark', save: true },\n});\n", "import { useTheme } from './useTheme';\n\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>;\n\ntype ToggleProps = {\n    id?: string;\n};\n\nexport function Toggle({ id = 'rth-toggle' }: ToggleProps) {\n    const { theme, setTheme } = useTheme();\n\n    const handleChange = (e: ChangeEvent) => setTheme(e.target.checked ? 'dark' : 'light');\n\n    return (\n        <div className=\"rht-toggle\">\n            <input\n                id={id}\n                className=\"rht-switch\"\n                type=\"checkbox\"\n                role=\"switch\"\n                onChange={handleChange}\n                checked={theme === 'dark'}\n            />\n\n            <label className=\"rht-label\" htmlFor={id}>\n                <svg\n                    className=\"rht-moon\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                </svg>\n\n                <svg\n                    className=\"rht-sun\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                </svg>\n\n                <span className=\"rht-ball\"></span>\n            </label>\n        </div>\n    );\n}\n", "import { useCallback, useEffect, useState } from 'react';\nimport { Theme, ThemeContext, ThemeOptions } from './Context';\nimport { getStoredTheme, storeTheme } from './local-storage';\nimport { getPreferredTheme } from './preferred-theme';\n\nconst fallbackTheme = 'dark';\n\ntype ThemeProviderProps = {\n    options?: ThemeOptions;\n    children: React.ReactNode;\n};\n\nexport function ThemeProvider({ options = {}, children }: ThemeProviderProps) {\n    const [theme, setTheme] = useState<Theme>(fallbackTheme);\n\n    useEffect(() => {\n        const theme = getStoredTheme() || getPreferredTheme() || options?.theme;\n        setTheme(theme);\n    }, []);\n\n    useEffect(() => {\n        document.body.setAttribute('data-theme', theme);\n    }, [theme]);\n\n    const handleThemeChange = useCallback((theme: Theme) => {\n        if (options?.save) {\n            storeTheme(theme);\n        }\n\n        setTheme(theme);\n    }, []);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme: handleThemeChange, options }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n", "import { Theme } from './Context';\n\nexport function storeTheme(theme: Theme) {\n    localStorage.setItem('rht-theme', theme);\n}\n\nexport function getStoredTheme() {\n    return localStorage.getItem('rht-theme') as Theme;\n}\n", "import { Theme } from './Context';\n\nexport function getPreferredTheme(): Theme {\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "ThemeProvider", "Toggle", "useTheme", "__toCommonJS", "import_react", "import_react", "ThemeContext", "React", "useTheme", "ThemeContext", "import_jsx_runtime", "Toggle", "id", "theme", "setTheme", "useTheme", "e", "import_react", "storeTheme", "theme", "getStoredTheme", "getPreferredTheme", "import_jsx_runtime", "fallbackTheme", "ThemeProvider", "options", "children", "theme", "setTheme", "getStoredTheme", "getPreferredTheme", "handleThemeChange", "storeTheme", "ThemeContext"]
}
