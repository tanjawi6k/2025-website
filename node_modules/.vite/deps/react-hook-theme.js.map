{
  "version": 3,
  "sources": ["../../react-hook-theme/src/index.ts", "../../react-hook-theme/src/useTheme.tsx", "../../react-hook-theme/src/Context.tsx", "../../react-hook-theme/src/Toggle.tsx", "../../react-hook-theme/src/Provider.tsx", "../../react-hook-theme/src/local-storage.ts", "../../react-hook-theme/src/preferred-theme.ts"],
  "sourcesContent": ["export { Toggle } from './Toggle';\nexport { useTheme } from './useTheme';\nexport { ThemeProvider } from './Provider';\n", "import { useContext } from 'react';\nimport { ThemeContext } from './Context';\n\nexport function useTheme() {\n    return useContext(ThemeContext);\n}\n", "import React from 'react';\n\nexport type Theme = 'dark' | 'light';\n\nexport type ThemeOptions = {\n    theme?: Theme;\n    save?: boolean;\n};\n\ntype ThemeContext = {\n    theme: Theme;\n    setTheme: (theme: Theme) => void;\n    options: ThemeOptions;\n};\n\nexport const ThemeContext = React.createContext<ThemeContext>({\n    theme: 'dark',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setTheme: () => {},\n    options: { theme: 'dark', save: true },\n});\n", "import { useTheme } from './useTheme';\n\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>;\n\ntype ToggleProps = {\n    id?: string;\n};\n\nexport function Toggle({ id = 'rth-toggle' }: ToggleProps) {\n    const { theme, setTheme } = useTheme();\n\n    const handleChange = (e: ChangeEvent) => setTheme(e.target.checked ? 'dark' : 'light');\n\n    return (\n        <div className=\"rht-toggle\">\n            <input\n                id={id}\n                className=\"rht-switch\"\n                type=\"checkbox\"\n                role=\"switch\"\n                onChange={handleChange}\n                checked={theme === 'dark'}\n            />\n\n            <label className=\"rht-label\" htmlFor={id}>\n                <svg\n                    className=\"rht-moon\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                </svg>\n\n                <svg\n                    className=\"rht-sun\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                </svg>\n\n                <span className=\"rht-ball\"></span>\n            </label>\n        </div>\n    );\n}\n", "import { useCallback, useEffect, useState } from 'react';\nimport { Theme, ThemeContext, ThemeOptions } from './Context';\nimport { getStoredTheme, storeTheme } from './local-storage';\nimport { getPreferredTheme } from './preferred-theme';\n\nconst fallbackTheme = 'dark';\n\ntype ThemeProviderProps = {\n    options?: ThemeOptions;\n    children: React.ReactNode;\n};\n\nexport function ThemeProvider({ options = {}, children }: ThemeProviderProps) {\n    const [theme, setTheme] = useState<Theme>(fallbackTheme);\n\n    useEffect(() => {\n        const theme = getStoredTheme() || getPreferredTheme() || options?.theme;\n        setTheme(theme);\n    }, []);\n\n    useEffect(() => {\n        document.body.setAttribute('data-theme', theme);\n    }, [theme]);\n\n    const handleThemeChange = useCallback((theme: Theme) => {\n        if (options?.save) {\n            storeTheme(theme);\n        }\n\n        setTheme(theme);\n    }, []);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme: handleThemeChange, options }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n}\n", "import { Theme } from './Context';\n\nexport function storeTheme(theme: Theme) {\n    localStorage.setItem('rht-theme', theme);\n}\n\nexport function getStoredTheme() {\n    return localStorage.getItem('rht-theme') as Theme;\n}\n", "import { Theme } from './Context';\n\nexport function getPreferredTheme(): Theme {\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "ThemeProvider", "Toggle", "useTheme", "__toCommonJS", "import_react", "ThemeContext", "React", "import_jsx_runtime", "id", "theme", "setTheme", "e", "storeTheme", "getStoredTheme", "getPreferredTheme", "fallbackTheme", "options", "children", "handleThemeChange"]
}
