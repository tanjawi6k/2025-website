import {
  require_jsx_runtime
} from "./chunk-NRBATONI.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __commonJS
} from "./chunk-V4OQ3NZ2.js";

// node_modules/react-hook-theme/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-hook-theme/dist/index.js"(exports, module) {
    var v = Object.create;
    var l = Object.defineProperty;
    var k = Object.getOwnPropertyDescriptor;
    var w = Object.getOwnPropertyNames;
    var C = Object.getPrototypeOf;
    var P = Object.prototype.hasOwnProperty;
    var b = (e, r) => {
      for (var o in r) l(e, o, { get: r[o], enumerable: true });
    };
    var c = (e, r, o, n) => {
      if (r && typeof r == "object" || typeof r == "function") for (let h of w(r)) !P.call(e, h) && h !== o && l(e, h, { get: () => r[h], enumerable: !(n = k(r, h)) || n.enumerable });
      return e;
    };
    var N = (e, r, o) => (o = e != null ? v(C(e)) : {}, c(r || !e || !e.__esModule ? l(o, "default", { value: e, enumerable: true }) : o, e));
    var E = (e) => c(l({}, "__esModule", { value: true }), e);
    var S = {};
    b(S, { ThemeProvider: () => f, Toggle: () => g, useTheme: () => s });
    module.exports = E(S);
    var d = require_react();
    var T = N(require_react());
    var a = T.default.createContext({ theme: "dark", setTheme: () => {
    }, options: { theme: "dark", save: true } });
    function s() {
      return (0, d.useContext)(a);
    }
    var t = require_jsx_runtime();
    function g({ id: e = "rth-toggle" }) {
      let { theme: r, setTheme: o } = s();
      return (0, t.jsxs)("div", { className: "rht-toggle", children: [(0, t.jsx)("input", { id: e, className: "rht-switch", type: "checkbox", role: "switch", onChange: (h) => o(h.target.checked ? "dark" : "light"), checked: r === "dark" }), (0, t.jsxs)("label", { className: "rht-label", htmlFor: e, children: [(0, t.jsx)("svg", { className: "rht-moon", xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", children: (0, t.jsx)("path", { d: "M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" }) }), (0, t.jsxs)("svg", { className: "rht-sun", xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", children: [(0, t.jsx)("circle", { cx: "12", cy: "12", r: "5" }), (0, t.jsx)("line", { x1: "12", y1: "1", x2: "12", y2: "3" }), (0, t.jsx)("line", { x1: "12", y1: "21", x2: "12", y2: "23" }), (0, t.jsx)("line", { x1: "4.22", y1: "4.22", x2: "5.64", y2: "5.64" }), (0, t.jsx)("line", { x1: "18.36", y1: "18.36", x2: "19.78", y2: "19.78" }), (0, t.jsx)("line", { x1: "1", y1: "12", x2: "3", y2: "12" }), (0, t.jsx)("line", { x1: "21", y1: "12", x2: "23", y2: "12" }), (0, t.jsx)("line", { x1: "4.22", y1: "19.78", x2: "5.64", y2: "18.36" }), (0, t.jsx)("line", { x1: "18.36", y1: "5.64", x2: "19.78", y2: "4.22" })] }), (0, t.jsx)("span", { className: "rht-ball" })] })] });
    }
    var m = require_react();
    function p(e) {
      localStorage.setItem("rht-theme", e);
    }
    function x() {
      return localStorage.getItem("rht-theme");
    }
    function u() {
      return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    }
    var y = require_jsx_runtime();
    var L = "dark";
    function f({ options: e = {}, children: r }) {
      let [o, n] = (0, m.useState)(L);
      (0, m.useEffect)(() => {
        let i = x() || u() || (e == null ? void 0 : e.theme);
        n(i);
      }, []), (0, m.useEffect)(() => {
        document.body.setAttribute("data-theme", o);
      }, [o]);
      let h = (0, m.useCallback)((i) => {
        e != null && e.save && p(i), n(i);
      }, []);
      return (0, y.jsx)(a.Provider, { value: { theme: o, setTheme: h, options: e }, children: r });
    }
  }
});
export default require_dist();
//# sourceMappingURL=react-hook-theme.js.map
